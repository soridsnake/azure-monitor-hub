{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "deploymentName": {
      "type": "string",
      "metadata": {
        "description": "Unique name for this monitoring deployment"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "useExistingLogAnalytics": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Use an existing Log Analytics workspace"
      }
    },
    "existingLogAnalyticsWorkspaceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource ID of existing Log Analytics workspace"
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Log Analytics workspace"
      }
    },
    "retentionInDays": {
      "type": "int",
      "defaultValue": 90,
      "minValue": 30,
      "maxValue": 730,
      "metadata": {
        "description": "Number of days to retain data in Log Analytics"
      }
    },
    "useExistingManagedIdentity": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Use an existing User-Assigned Managed Identity"
      }
    },
    "existingManagedIdentityId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource ID of existing Managed Identity"
      }
    },
    "managedIdentityName": {
      "type": "string",
      "metadata": {
        "description": "Name of the User-Assigned Managed Identity"
      }
    },
    "dcrNameWindows": {
      "type": "string",
      "defaultValue": "[format('dcr-{0}-unified', parameters('deploymentName'))]",
      "metadata": {
        "description": "Name of the unified Data Collection Rule for Windows and Linux"
      }
    },
    "dcrNameLinux": {
      "type": "string",
      "defaultValue": "[format('dcr-{0}-unified', parameters('deploymentName'))]",
      "metadata": {
        "description": "Name of the unified Data Collection Rule (same as Windows)"
      }
    },
    "monitorExistingVMs": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Monitor existing Azure VMs during deployment"
      }
    },
    "monitorAllVMs": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Automatically discover and monitor all Azure VMs in subscription"
      }
    },
    "selectedVMIds": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Array of Azure VM Resource IDs to monitor"
      }
    },
    "monitorExistingArcServers": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Monitor existing Arc-enabled servers during deployment"
      }
    },
    "monitorAllArcServers": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Automatically discover and monitor all Arc servers in subscription"
      }
    },
    "selectedArcServerIds": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Array of Arc Server Resource IDs to monitor"
      }
    },
    "enableAzureVMPolicy": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Azure Policy for automatic Azure VM enrollment"
      }
    },
    "azureVMPolicyAssignmentName": {
      "type": "string",
      "defaultValue": "[format('ama-vm-monitoring-{0}', parameters('deploymentName'))]",
      "metadata": {
        "description": "Name of the Azure VM Policy assignment"
      }
    },
    "enableArcPolicy": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Azure Policy for automatic Arc server enrollment"
      }
    },
    "arcPolicyAssignmentName": {
      "type": "string",
      "defaultValue": "[format('ama-arc-monitoring-{0}', parameters('deploymentName'))]",
      "metadata": {
        "description": "Name of the Arc Policy assignment"
      }
    },
    "enableProcessesAndDependencies": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable VM Insights processes and dependencies for Arc servers"
      }
    },
    "enableChangeTracking": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Change Tracking & Inventory"
      }
    },
    "enableChangeTrackingAzureVM": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Change Tracking for Azure VMs"
      }
    },
    "enableChangeTrackingArc": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Change Tracking for Arc servers"
      }
    },
    "changeTrackingVMPolicyAssignmentName": {
      "type": "string",
      "defaultValue": "[format('ct-vm-{0}', parameters('deploymentName'))]",
      "metadata": {
        "description": "Name of the Change Tracking VM Policy assignment"
      }
    },
    "changeTrackingArcPolicyAssignmentName": {
      "type": "string",
      "defaultValue": "[format('ct-arc-{0}', parameters('deploymentName'))]",
      "metadata": {
        "description": "Name of the Change Tracking Arc Policy assignment"
      }
    },
    "enableCPUAlerts": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable CPU utilization alerts"
      }
    },
    "cpuThreshold": {
      "type": "int",
      "defaultValue": 95,
      "minValue": 50,
      "maxValue": 100,
      "metadata": {
        "description": "CPU threshold percentage for alerts"
      }
    },
    "enableMemoryAlerts": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable memory utilization alerts"
      }
    },
    "memoryThreshold": {
      "type": "int",
      "defaultValue": 85,
      "minValue": 50,
      "maxValue": 100,
      "metadata": {
        "description": "Memory threshold percentage for alerts"
      }
    },
    "enableDiskAlerts": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable disk space alerts"
      }
    },
    "diskThreshold": {
      "type": "int",
      "defaultValue": 95,
      "minValue": 50,
      "maxValue": 100,
      "metadata": {
        "description": "Disk usage threshold percentage for alerts"
      }
    },
    "enableHeartbeatAlerts": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable VM heartbeat alerts"
      }
    },
    "createActionGroup": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Create an Action Group for alerts"
      }
    },
    "actionGroupName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Action Group"
      }
    },
    "emailRecipients": {
      "type": "string",
      "metadata": {
        "description": "Semicolon-separated email addresses for alert notifications"
      }
    },
    "tagsByResource": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Tags to apply to resources"
      }
    }
  },
  "variables": {
    "workspaceName": "[if(parameters('useExistingLogAnalytics'), split(parameters('existingLogAnalyticsWorkspaceId'), '/')[8], parameters('logAnalyticsWorkspaceName'))]",
    "workspaceId": "[if(parameters('useExistingLogAnalytics'), parameters('existingLogAnalyticsWorkspaceId'), resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')))]",
    "managedIdentityId": "[if(parameters('useExistingManagedIdentity'), parameters('existingManagedIdentityId'), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')))]",
    "dcrName": "[format('dcr-{0}-unified', parameters('deploymentName'))]"
  },
  "resources": [
    {
      "condition": "[not(parameters('useExistingLogAnalytics'))]",
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[parameters('logAnalyticsWorkspaceName')]",
      "location": "[parameters('location')]",
      "tags": "[if(contains(parameters('tagsByResource'), 'Microsoft.OperationalInsights/workspaces'), parameters('tagsByResource')['Microsoft.OperationalInsights/workspaces'], json('{}'))]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": "[parameters('retentionInDays')]",
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },
    {
      "condition": "[not(parameters('useExistingManagedIdentity'))]",
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[parameters('managedIdentityName')]",
      "location": "[parameters('location')]",
      "tags": "[if(contains(parameters('tagsByResource'), 'Microsoft.ManagedIdentity/userAssignedIdentities'), parameters('tagsByResource')['Microsoft.ManagedIdentity/userAssignedIdentities'], json('{}'))]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('roleAssignment-{0}', parameters('deploymentName'))]",
      "subscriptionId": "[subscription().subscriptionId]",
      "location": "[parameters('location')]",
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "parameters": {
          "principalId": {
            "value": "[if(parameters('useExistingManagedIdentity'), reference(parameters('existingManagedIdentityId'), '2023-01-31').principalId, reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2023-01-31').principalId)]"
          },
          "deploymentName": {
            "value": "[parameters('deploymentName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "deploymentName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, parameters('principalId'), parameters('deploymentName'), 'Contributor')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalId": "[parameters('principalId')]",
                "principalType": "ServicePrincipal",
                "description": "Allows Managed Identity to deploy monitoring resources and configure VMs and Arc servers"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, parameters('principalId'), parameters('deploymentName'), 'ManagedIdentityOperator')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f1a07417-d97a-45cb-824c-7a7467783830')]",
                "principalId": "[parameters('principalId')]",
                "principalType": "ServicePrincipal",
                "description": "Allows Managed Identity to assign itself to VMs and Arc servers"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, parameters('principalId'), parameters('deploymentName'), 'VirtualMachineContributor')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '9980e02c-c2be-4d73-94e8-173b1dc7cf3c')]",
                "principalId": "[parameters('principalId')]",
                "principalType": "ServicePrincipal",
                "description": "Allows Managed Identity to manage VM extensions"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, parameters('principalId'), parameters('deploymentName'), 'AzureConnectedMachineResourceAdministrator')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'cd570a14-e51a-42ad-bac8-bafd67325302')]",
                "principalId": "[parameters('principalId')]",
                "principalType": "ServicePrincipal",
                "description": "Allows Managed Identity to manage Arc-enabled servers"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/dataCollectionRules",
      "apiVersion": "2022-06-01",
      "name": "[variables('dcrName')]",
      "location": "[parameters('location')]",
      "tags": "[if(contains(parameters('tagsByResource'), 'Microsoft.Insights/dataCollectionRules'), parameters('tagsByResource')['Microsoft.Insights/dataCollectionRules'], json('{}'))]",
      "properties": {
        "dataSources": {
          "performanceCounters": [
            {
              "name": "VMInsightsPerfCounters",
              "samplingFrequencyInSeconds": 60,
              "streams": ["Microsoft-InsightsMetrics"],
              "counterSpecifiers": [
                "\\VmInsights\\DetailedMetrics"
              ]
            }
          ],
          "syslog": [
            {
              "name": "syslogDataSource",
              "streams": ["Microsoft-Syslog"],
              "facilityNames": ["auth", "authpriv", "cron", "daemon", "kern", "syslog"],
              "logLevels": ["Error", "Critical", "Alert", "Emergency"]
            }
          ]
        },
        "destinations": {
          "logAnalytics": [
            {
              "name": "VMInsightsPerf-Logs-Dest",
              "workspaceResourceId": "[variables('workspaceId')]"
            }
          ]
        },
        "dataFlows": [
          {
            "streams": ["Microsoft-InsightsMetrics"],
            "destinations": ["VMInsightsPerf-Logs-Dest"]
          },
          {
            "streams": ["Microsoft-Syslog"],
            "destinations": ["VMInsightsPerf-Logs-Dest"]
          }
        ],
        "description": "Unified Data Collection Rule for Azure VMs and Arc servers (Windows and Linux) with VM Insights"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "condition": "[parameters('enableChangeTracking')]",
      "type": "Microsoft.Insights/dataCollectionRules",
      "apiVersion": "2022-06-01",
      "name": "[format('dcr-{0}-changetracking', parameters('deploymentName'))]",
      "location": "[parameters('location')]",
      "tags": "[if(contains(parameters('tagsByResource'), 'Microsoft.Insights/dataCollectionRules'), parameters('tagsByResource')['Microsoft.Insights/dataCollectionRules'], json('{}'))]",
      "properties": {
        "dataSources": {
          "extensions": [
            {
              "name": "CTDataSource-Windows",
              "streams": [
                "Microsoft-ConfigurationChange",
                "Microsoft-ConfigurationChangeV2",
                "Microsoft-ConfigurationData"
              ],
              "extensionName": "ChangeTracking-Windows"
            },
            {
              "name": "CTDataSource-Linux",
              "streams": [
                "Microsoft-ConfigurationChange",
                "Microsoft-ConfigurationChangeV2",
                "Microsoft-ConfigurationData"
              ],
              "extensionName": "ChangeTracking-Linux"
            }
          ]
        },
        "destinations": {
          "logAnalytics": [
            {
              "name": "ChangeTracking-Logs-Dest",
              "workspaceResourceId": "[variables('workspaceId')]"
            }
          ]
        },
        "dataFlows": [
          {
            "streams": [
              "Microsoft-ConfigurationChange",
              "Microsoft-ConfigurationChangeV2",
              "Microsoft-ConfigurationData"
            ],
            "destinations": [
              "ChangeTracking-Logs-Dest"
            ]
          }
        ],
        "description": "Data Collection Rule for Change Tracking and Inventory (Windows and Linux)"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "condition": "[and(parameters('enableChangeTracking'), parameters('enableChangeTrackingAzureVM'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('policyAssignment-ct-azure-vms-{0}', parameters('deploymentName'))]",
      "subscriptionId": "[subscription().subscriptionId]",
      "location": "[parameters('location')]",
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "parameters": {
          "policyAssignmentName": {
            "value": "[parameters('changeTrackingVMPolicyAssignmentName')]"
          },
          "managedIdentityResourceId": {
            "value": "[variables('managedIdentityId')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "dcrResourceId": {
            "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('dcr-{0}-changetracking', parameters('deploymentName')))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "policyAssignmentName": {
              "type": "string"
            },
            "managedIdentityResourceId": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "dcrResourceId": {
              "type": "string"
            }
          },
          "variables": {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ad1eeff9-20d7-4c82-a04e-903acab0bfc1"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2023-04-01",
              "name": "[parameters('policyAssignmentName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[parameters('managedIdentityResourceId')]": {}
                }
              },
              "properties": {
                "displayName": "[format('Configure Windows VMs for ChangeTracking - {0}', parameters('policyAssignmentName'))]",
                "description": "Automatically installs ChangeTracking extension on Windows Azure VMs and associates with DCR",
                "enforcementMode": "Default",
                "policyDefinitionId": "[variables('policyDefinitionId')]",
                "parameters": {
                  "effect": {
                    "value": "DeployIfNotExists"
                  },
                  "bringYourOwnUserAssignedManagedIdentity": {
                    "value": true
                  },
                  "userAssignedManagedIdentityResourceId": {
                    "value": "[parameters('managedIdentityResourceId')]"
                  },
                  "dcrResourceId": {
                    "value": "[parameters('dcrResourceId')]"
                  }
                },
                "nonComplianceMessages": [
                  {
                    "message": "Windows Azure VMs must have ChangeTracking extension and DCR association"
                  }
                ]
              }
            }
          ],
          "outputs": {
            "policyAssignmentId": {
              "type": "string",
              "value": "[subscriptionResourceId('Microsoft.Authorization/policyAssignments', parameters('policyAssignmentName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/dataCollectionRules', format('dcr-{0}-changetracking', parameters('deploymentName')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
        "[extensionResourceId(format('/subscriptions/{0}', subscription().subscriptionId), 'Microsoft.Resources/deployments', format('roleAssignment-{0}', parameters('deploymentName')))]"
      ]
    },
    {
      "condition": "[and(parameters('enableChangeTracking'), parameters('enableChangeTrackingArc'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('policyAssignment-ct-arc-servers-{0}', parameters('deploymentName'))]",
      "subscriptionId": "[subscription().subscriptionId]",
      "location": "[parameters('location')]",
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "parameters": {
          "policyAssignmentName": {
            "value": "[parameters('changeTrackingArcPolicyAssignmentName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "dcrResourceId": {
            "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('dcr-{0}-changetracking', parameters('deploymentName')))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "policyAssignmentName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "dcrResourceId": {
              "type": "string"
            }
          },
          "variables": {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4bb303db-d051-4099-95d2-e3e1428a4cd5"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2023-04-01",
              "name": "[parameters('policyAssignmentName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "displayName": "[format('Configure ChangeTracking for Windows Arc machines - {0}', parameters('policyAssignmentName'))]",
                "description": "Automatically deploys ChangeTracking extension on Windows Arc servers and associates with DCR",
                "enforcementMode": "Default",
                "policyDefinitionId": "[variables('policyDefinitionId')]",
                "parameters": {
                  "effect": {
                    "value": "DeployIfNotExists"
                  },
                  "dcrResourceId": {
                    "value": "[parameters('dcrResourceId')]"
                  }
                },
                "nonComplianceMessages": [
                  {
                    "message": "Windows Arc servers must have ChangeTracking extension and DCR association"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, parameters('policyAssignmentName'), 'ChangeTrackingArcContributor')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalId": "[reference(subscriptionResourceId('Microsoft.Authorization/policyAssignments', parameters('policyAssignmentName')), '2023-04-01', 'Full').identity.principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Authorization/policyAssignments', parameters('policyAssignmentName'))]"
              ]
            }
          ],
          "outputs": {
            "policyAssignmentId": {
              "type": "string",
              "value": "[subscriptionResourceId('Microsoft.Authorization/policyAssignments', parameters('policyAssignmentName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/dataCollectionRules', format('dcr-{0}-changetracking', parameters('deploymentName')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
        "[extensionResourceId(format('/subscriptions/{0}', subscription().subscriptionId), 'Microsoft.Resources/deployments', format('roleAssignment-{0}', parameters('deploymentName')))]"
      ]
    },
    {
      "condition": "[parameters('createActionGroup')]",
      "type": "Microsoft.Insights/actionGroups",
      "apiVersion": "2023-01-01",
      "name": "[parameters('actionGroupName')]",
      "location": "global",
      "tags": "[if(contains(parameters('tagsByResource'), 'Microsoft.Insights/actionGroups'), parameters('tagsByResource')['Microsoft.Insights/actionGroups'], json('{}'))]",
      "properties": {
        "copy": [
          {
            "name": "emailReceivers",
            "count": "[length(split(parameters('emailRecipients'), ';'))]",
            "input": {
              "name": "[format('email-{0}', uniqueString(split(parameters('emailRecipients'), ';')[copyIndex('emailReceivers')]))]",
              "emailAddress": "[trim(split(parameters('emailRecipients'), ';')[copyIndex('emailReceivers')])]",
              "useCommonAlertSchema": true
            }
          }
        ],
        "groupShortName": "[take(parameters('actionGroupName'), 12)]",
        "enabled": true
      }
    },
    {
      "condition": "[parameters('enableCPUAlerts')]",
      "type": "Microsoft.Insights/scheduledQueryRules",
      "apiVersion": "2023-03-15-preview",
      "name": "[format('alert-{0}-cpu-critical', parameters('deploymentName'))]",
      "location": "[parameters('location')]",
      "tags": "[if(contains(parameters('tagsByResource'), 'Microsoft.Insights/scheduledQueryRules'), parameters('tagsByResource')['Microsoft.Insights/scheduledQueryRules'], json('{}'))]",
      "properties": {
        "displayName": "[format('CPU Critical - {0}', parameters('deploymentName'))]",
        "description": "Alert when CPU usage exceeds 95%",
        "severity": 1,
        "enabled": true,
        "evaluationFrequency": "PT5M",
        "scopes": ["[variables('workspaceId')]"],
        "windowSize": "PT5M",
        "criteria": {
          "allOf": [
            {
              "query": "InsightsMetrics | where Namespace == \"Processor\" and Name == \"UtilizationPercentage\" | where Val > 95 | summarize AggregatedValue = avg(Val) by Computer, _ResourceId, bin(TimeGenerated, 5m)",
              "timeAggregation": "Average",
              "metricMeasureColumn": "AggregatedValue",
              "dimensions": [
                {"name": "Computer", "operator": "Include", "values": ["*"]},
                {"name": "_ResourceId", "operator": "Include", "values": ["*"]}
              ],
              "operator": "GreaterThan",
              "threshold": 95,
              "failingPeriods": {"numberOfEvaluationPeriods": 1, "minFailingPeriodsToAlert": 1}
            }
          ]
        },
        "actions": {
          "actionGroups": "[if(parameters('createActionGroup'), createArray(resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))), createArray())]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "condition": "[parameters('enableMemoryAlerts')]",
      "type": "Microsoft.Insights/scheduledQueryRules",
      "apiVersion": "2023-03-15-preview",
      "name": "[format('alert-{0}-memory', parameters('deploymentName'))]",
      "location": "[parameters('location')]",
      "tags": "[if(contains(parameters('tagsByResource'), 'Microsoft.Insights/scheduledQueryRules'), parameters('tagsByResource')['Microsoft.Insights/scheduledQueryRules'], json('{}'))]",
      "properties": {
        "displayName": "[format('High Memory Usage - {0}', parameters('deploymentName'))]",
        "description": "[format('Alert when Memory usage exceeds {0}%', parameters('memoryThreshold'))]",
        "severity": 2,
        "enabled": true,
        "evaluationFrequency": "PT5M",
        "scopes": ["[variables('workspaceId')]"],
        "windowSize": "PT5M",
        "criteria": {
          "allOf": [
            {
              "query": "[format('InsightsMetrics | where Namespace == \"Memory\" and Name == \"AvailableMB\" | extend TotalMemory = todouble(parse_json(Tags)[\"vm.azm.ms/memorySizeMB\"]) | extend UsedPercent = 100.0 - ((Val / TotalMemory) * 100.0) | where UsedPercent > {0} | summarize AggregatedValue = avg(UsedPercent) by Computer, _ResourceId, bin(TimeGenerated, 5m)', parameters('memoryThreshold'))]",
              "timeAggregation": "Average",
              "metricMeasureColumn": "AggregatedValue",
              "dimensions": [
                {"name": "Computer", "operator": "Include", "values": ["*"]},
                {"name": "_ResourceId", "operator": "Include", "values": ["*"]}
              ],
              "operator": "GreaterThan",
              "threshold": "[parameters('memoryThreshold')]",
              "failingPeriods": {"numberOfEvaluationPeriods": 1, "minFailingPeriodsToAlert": 1}
            }
          ]
        },
        "actions": {
          "actionGroups": "[if(parameters('createActionGroup'), createArray(resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))), createArray())]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "condition": "[parameters('enableDiskAlerts')]",
      "type": "Microsoft.Insights/scheduledQueryRules",
      "apiVersion": "2023-03-15-preview",
      "name": "[format('alert-{0}-disk-critical', parameters('deploymentName'))]",
      "location": "[parameters('location')]",
      "tags": "[if(contains(parameters('tagsByResource'), 'Microsoft.Insights/scheduledQueryRules'), parameters('tagsByResource')['Microsoft.Insights/scheduledQueryRules'], json('{}'))]",
      "properties": {
        "displayName": "[format('Disk Critical - {0}', parameters('deploymentName'))]",
        "description": "Alert when disk free space is below 5%",
        "severity": 1,
        "enabled": true,
        "evaluationFrequency": "PT15M",
        "scopes": ["[variables('workspaceId')]"],
        "windowSize": "PT15M",
        "criteria": {
          "allOf": [
            {
              "query": "InsightsMetrics | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"FreeSpacePercentage\" | extend Disk = tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | extend FreeSpace = Val | summarize FreeSpace = min(FreeSpace) by Computer, Disk, _ResourceId | where FreeSpace < 5",
              "timeAggregation": "Count",
              "dimensions": [
                {"name": "Computer", "operator": "Include", "values": ["*"]},
                {"name": "Disk", "operator": "Include", "values": ["*"]},
                {"name": "_ResourceId", "operator": "Include", "values": ["*"]}
              ],
              "operator": "GreaterThan",
              "threshold": 0,
              "failingPeriods": {"numberOfEvaluationPeriods": 1, "minFailingPeriodsToAlert": 1}
            }
          ]
        },
        "actions": {
          "actionGroups": "[if(parameters('createActionGroup'), createArray(resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))), createArray())]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/scheduledQueryRules",
      "apiVersion": "2023-03-15-preview",
      "name": "[format('alert-{0}-disk-not-available', parameters('deploymentName'))]",
      "location": "[parameters('location')]",
      "tags": "[if(contains(parameters('tagsByResource'), 'Microsoft.Insights/scheduledQueryRules'), parameters('tagsByResource')['Microsoft.Insights/scheduledQueryRules'], json('{}'))]",
      "properties": {
        "displayName": "[format('Disk Critical - Not Available - {0}', parameters('deploymentName'))]",
        "description": "Alert when disk metrics stop reporting but machine is sending heartbeat",
        "severity": 2,
        "enabled": true,
        "evaluationFrequency": "PT30M",
        "scopes": ["[variables('workspaceId')]"],
        "windowSize": "PT6H",
        "criteria": {
          "allOf": [
            {
              "query": "let tmp = Heartbeat | where TimeGenerated > ago(6h) | summarize arg_max(TimeGenerated,*) by Computer | extend maxhhearbeat=TimeGenerated | extend cname= tolower(replace_string(Computer,\".softjam.it\",\"\")) | project maxhhearbeat,cname; InsightsMetrics | where Origin == \"vm.azm.ms\" | where Namespace == \"LogicalDisk\" and Name == \"FreeSpacePercentage\" | extend Disk = tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"]) | extend FreeSpace = Val | where TimeGenerated > ago(6h) | extend Computer=tolower(Computer) | summarize arg_max(TimeGenerated, *) by _ResourceId, Computer, Disk | join kind=leftouter tmp on $left.Computer==$right.cname | where TimeGenerated < ago(30min) | where maxhhearbeat > ago(20m)",
              "timeAggregation": "Count",
              "dimensions": [
                {"name": "Computer", "operator": "Include", "values": ["*"]},
                {"name": "Disk", "operator": "Include", "values": ["*"]},
                {"name": "_ResourceId", "operator": "Include", "values": ["*"]}
              ],
              "operator": "GreaterThan",
              "threshold": 0,
              "failingPeriods": {"numberOfEvaluationPeriods": 1, "minFailingPeriodsToAlert": 1}
            }
          ]
        },
        "actions": {
          "actionGroups": "[if(parameters('createActionGroup'), createArray(resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))), createArray())]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "condition": "[parameters('enableHeartbeatAlerts')]",
      "type": "Microsoft.Insights/scheduledQueryRules",
      "apiVersion": "2023-03-15-preview",
      "name": "[format('alert-{0}-heartbeat', parameters('deploymentName'))]",
      "location": "[parameters('location')]",
      "tags": "[if(contains(parameters('tagsByResource'), 'Microsoft.Insights/scheduledQueryRules'), parameters('tagsByResource')['Microsoft.Insights/scheduledQueryRules'], json('{}'))]",
      "properties": {
        "displayName": "[format('Heartbeat Missing - {0}', parameters('deploymentName'))]",
        "description": "Alert when machine stops sending heartbeat for 10+ minutes",
        "severity": 1,
        "enabled": true,
        "evaluationFrequency": "PT10M",
        "scopes": ["[subscription().id]"],
        "targetResourceTypes": ["Microsoft.Compute/virtualMachines", "Microsoft.HybridCompute/machines"],
        "windowSize": "PT30M",
        "criteria": {
          "allOf": [
            {
              "query": "InsightsMetrics | where TimeGenerated > ago(30m) | where Name == \"Heartbeat\" | where Computer != \"sgescheduler01\" | summarize TimeGenerated = max(TimeGenerated) by Computer, _ResourceId | where TimeGenerated < ago(10m)",
              "timeAggregation": "Count",
              "dimensions": [
                {"name": "Computer", "operator": "Include", "values": ["*"]},
                {"name": "_ResourceId", "operator": "Include", "values": ["*"]}
              ],
              "operator": "GreaterThan",
              "threshold": 0,
              "failingPeriods": {"numberOfEvaluationPeriods": 1, "minFailingPeriodsToAlert": 1}
            }
          ]
        },
        "actions": {
          "actionGroups": "[if(parameters('createActionGroup'), createArray(resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))), createArray())]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))]"
      ]
    },
    {
      "condition": "[parameters('enableChangeTracking')]",
      "type": "Microsoft.Insights/scheduledQueryRules",
      "apiVersion": "2023-03-15-preview",
      "name": "[format('alert-{0}-service-adconnect', parameters('deploymentName'))]",
      "location": "[parameters('location')]",
      "tags": "[if(contains(parameters('tagsByResource'), 'Microsoft.Insights/scheduledQueryRules'), parameters('tagsByResource')['Microsoft.Insights/scheduledQueryRules'], json('{}'))]",
      "properties": {
        "displayName": "[format('Service Critical - AD Connect - {0}', parameters('deploymentName'))]",
        "description": "Alert when Azure AD Connect services are stopped",
        "severity": 1,
        "enabled": true,
        "evaluationFrequency": "PT5M",
        "scopes": ["[variables('workspaceId')]"],
        "windowSize": "PT15M",
        "criteria": {
          "allOf": [
            {
              "query": "ConfigurationData | where SvcDisplayName in~ (\"Microsoft Azure AD Sync\", 'Check point identity collector','azure ad connect health sync insights service', 'azure ad connect health sync monitoring service') and SvcState contains \"Stopped\" | order by TimeGenerated desc",
              "timeAggregation": "Count",
              "dimensions": [
                {"name": "Computer", "operator": "Include", "values": ["*"]},
                {"name": "SvcDisplayName", "operator": "Include", "values": ["*"]},
                {"name": "_ResourceId", "operator": "Include", "values": ["*"]}
              ],
              "operator": "GreaterThan",
              "threshold": 0,
              "failingPeriods": {"numberOfEvaluationPeriods": 1, "minFailingPeriodsToAlert": 1}
            }
          ]
        },
        "actions": {
          "actionGroups": "[if(parameters('createActionGroup'), createArray(resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))), createArray())]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "condition": "[parameters('enableChangeTracking')]",
      "type": "Microsoft.Insights/scheduledQueryRules",
      "apiVersion": "2023-03-15-preview",
      "name": "[format('alert-{0}-service-dc', parameters('deploymentName'))]",
      "location": "[parameters('location')]",
      "tags": "[if(contains(parameters('tagsByResource'), 'Microsoft.Insights/scheduledQueryRules'), parameters('tagsByResource')['Microsoft.Insights/scheduledQueryRules'], json('{}'))]",
      "properties": {
        "displayName": "[format('Service Critical - Domain Controller - {0}', parameters('deploymentName'))]",
        "description": "Alert when critical Domain Controller services are stopped",
        "severity": 0,
        "enabled": true,
        "evaluationFrequency": "PT5M",
        "scopes": ["[variables('workspaceId')]"],
        "windowSize": "PT15M",
        "criteria": {
          "allOf": [
            {
              "query": "ConfigurationData | where SvcDisplayName in~ ('active directory web services', 'dfs replication', 'dns server', 'kerberos key distribution center', 'workstation', 'netlogon', 'active directory domain services', 'remote procedure call (rpc)', 'windows time', 'intersite messaging') and Computer in~ ('SAZDC22', 'SAZDC23', 'SGEDC03', 'SGEDC01') and SvcState contains \"Stopped\" | order by TimeGenerated desc",
              "timeAggregation": "Count",
              "dimensions": [
                {"name": "Computer", "operator": "Include", "values": ["*"]},
                {"name": "SvcDisplayName", "operator": "Include", "values": ["*"]},
                {"name": "_ResourceId", "operator": "Include", "values": ["*"]}
              ],
              "operator": "GreaterThan",
              "threshold": 0,
              "failingPeriods": {"numberOfEvaluationPeriods": 1, "minFailingPeriodsToAlert": 1}
            }
          ]
        },
        "actions": {
          "actionGroups": "[if(parameters('createActionGroup'), createArray(resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))), createArray())]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      ]
    }
  ],
  "outputs": {
    "managedIdentityPrincipalId": {
      "type": "string",
      "value": "[if(parameters('useExistingManagedIdentity'), reference(parameters('existingManagedIdentityId'), '2023-01-31').principalId, reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2023-01-31').principalId)]",
      "metadata": {
        "description": "Principal ID of the Managed Identity"
      }
    },
    "workspaceId": {
      "type": "string",
      "value": "[variables('workspaceId')]",
      "metadata": {
        "description": "Resource ID of the Log Analytics Workspace"
      }
    },
    "workspaceName": {
      "type": "string",
      "value": "[variables('workspaceName')]",
      "metadata": {
        "description": "Name of the Log Analytics Workspace"
      }
    },
    "dcrId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', variables('dcrName'))]",
      "metadata": {
        "description": "Resource ID of the unified Data Collection Rule"
      }
    },
    "dcrChangeTrackingId": {
      "type": "string",
      "value": "[if(parameters('enableChangeTracking'), resourceId('Microsoft.Insights/dataCollectionRules', format('dcr-{0}-changetracking', parameters('deploymentName'))), '')]",
      "condition": "[parameters('enableChangeTracking')]",
      "metadata": {
        "description": "Resource ID of the Change Tracking Data Collection Rule (if enabled)"
      }
    },
    "changeTrackingVMPolicyAssignmentId": {
      "type": "string",
      "value": "[if(and(parameters('enableChangeTracking'), parameters('enableChangeTrackingAzureVM')), reference(format('policyAssignment-ct-azure-vms-{0}', parameters('deploymentName'))).outputs.policyAssignmentId.value, '')]",
      "condition": "[and(parameters('enableChangeTracking'), parameters('enableChangeTrackingAzureVM'))]",
      "metadata": {
        "description": "Resource ID of the Change Tracking VM Policy Assignment (if enabled)"
      }
    },
    "changeTrackingArcPolicyAssignmentId": {
      "type": "string",
      "value": "[if(and(parameters('enableChangeTracking'), parameters('enableChangeTrackingArc')), reference(format('policyAssignment-ct-arc-servers-{0}', parameters('deploymentName'))).outputs.policyAssignmentId.value, '')]",
      "condition": "[and(parameters('enableChangeTracking'), parameters('enableChangeTrackingArc'))]",
      "metadata": {
        "description": "Resource ID of the Change Tracking Arc Policy Assignment (if enabled)"
      }
    },
    "actionGroupId": {
      "type": "string",
      "value": "[if(parameters('createActionGroup'), resourceId('Microsoft.Insights/actionGroups', parameters('actionGroupName')), '')]",
      "condition": "[parameters('createActionGroup')]",
      "metadata": {
        "description": "Resource ID of the Action Group"
      }
    }
  }
}